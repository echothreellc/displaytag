<?xml version="1.0" encoding="UTF-8"?>
<document>
  <properties>
    <title>Migration from previous versions</title>
    <author email="fgiust(at)users.sourceforge.net">Fabrizio Giustina</author>
  </properties>
  <body>
    <section name="migrating from 8.x versions to 1.0">
      <p />
      <subsection name="Old Styles @deprecated">
        <p class="changed">These css classes were applied in previous version of the &lt;display:*&gt; tag library. See the "now use" column for direction on how migrate your css to the new version (a quick task which will also improve the quality -and lower the weight- of your html output)</p>
        <table>
          <thead>
            <tr>
              <th>class</th>
              <th>was</th>
              <th>now use</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>table</td>
              <td>assigned to the main table tag</td>
              <td>on class is assigned by default. You can add your own adding a "class" attribute to the &lt;display:table&gt; tag</td>
            </tr>
            <tr>
              <td>tableRowAction</td>
              <td>assigned to the tr tag of the action row (paging, export, etc...)</td>
              <td>You can totally customize the html generated using properties, no css class is added by default</td>
            </tr>
            <tr>
              <td>tableRowHeader</td>
              <td>assigned to the tr tag of the header row</td>
              <td>
                Assign a style to
                <code>thead tr</code>
                element, you don't need a class. If you want this style to be applied only to the &lt;display:table&gt; simply add a class or id to the table tag and create a children rule in css like
                <code>table.myclass thead tr {color:red;}</code>
              </td>
            </tr>
            <tr>
              <td>tableRowOdd</td>
              <td>assigned to the tr tag of all odd numbered data rows</td>
              <td>the name of the class is now simply "odd"</td>
            </tr>
            <tr>
              <td>tableRowEven</td>
              <td>assigned to the tr tag of all even numbered data rows</td>
              <td>the name of the class is now simply "even"</td>
            </tr>
            <tr>
              <td>tableCellAction</td>
              <td>assigned to the td tag of all actions cells (paging, export, etc...)</td>
              <td>You can totally customize the html generated using properties, no css class is added by default</td>
            </tr>
            <tr>
              <td>tableCellHeader</td>
              <td>assigned to the td tag of all header cells</td>
              <td>
                Assign a style to
                <code>thead th</code>
                element, you don't need a class. If you want this style to be applied only to the &lt;display:table&gt;, simply add a class or id to the table tag and create a parent.child rule in css like
                <code>table.myclass tbody th {color:red;}</code>
              </td>
            </tr>
            <tr>
              <td>tableCell</td>
              <td>assigned to the td tag of all data cells</td>
              <td>
                Assign a style to
                <code>tbody td</code>
                element. You don't need a class. If you want this style to be applied only to the &lt;display:table&gt;, simply add a class or id to the table tag and create a parent.child rule in css like
                <code>table.myclass tbody td {color:red;}</code>
              </td>
            </tr>
          </tbody>
        </table>
      </subsection>
    </section>
  </body>
</document>

